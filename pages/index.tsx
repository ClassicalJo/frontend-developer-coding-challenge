import type { NextPage, GetServerSideProps } from 'next'
import { EffectUserData, ProductsData, UserData, ValidCharge } from '../components/types';
import Head from 'next/head'
import UserList from '../components/list/UserList';
import fetchData from '../components/fetchData';
import ProductList from '../components/list/ProductsList';
import { useCallback, useEffect, useState } from 'react';
import Hero from '../components/hero';
import GlobalStyles from '../components/globalStyles';

type AppProps = {
  productsData: ProductsData;
}

const Home: NextPage<AppProps> = ({ productsData }) => {
  let [userData, setUserData] = useState<EffectUserData>(null)
  let fetchUser = useCallback(async () => {
    let res = await fetch("api/user")
    let data = await res.json()
    setUserData(data)
  }, [])

  useEffect(() => {
    fetchUser()
  }, [fetchUser])

  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GlobalStyles />
      <main >

        <Hero />

        <UserList userData={userData} refreshUserData={fetchUser} />
        <ProductList productsData={productsData} userData={userData} refreshUserData={fetchUser} />
      </main>

      <footer>
        <a href="https://github.com/ClassicalJo/frontend-developer-coding-challenge">Link to the repo</a>
      </footer>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  try {
    let productsData = await fetchData(process.env.PRODUCTURL, "GET", process.env.USERTOKEN)
    return { props: { productsData } }
  } catch (error) {
    return { props: { productData: [] } }
  }
}

export default Home
